#+TITLE: Keyboards, Modifier keys, Consoles, Terminal Emulators etc in UNIX systems

Feel I need this as a master document o tie together some other stuff which is currently spread into different files such as
 - [[file:Shell%20Scripting%20Magic.org][Some tips & Commands to make Shell Scripting always Pretty Sweet]]
 - [[file:my%20emacs%20and%20keybinding%20dilemma.org][The Emacs/Linux/Super Key epic keybinding Odyssey.org]]
 - [[file:Unix%20Systems%20Help.org][Help for all Unix Related Things]]
 - [[file:Z-Shell.org][Z-Shell]]
 - etc

The hierarchy of input:
* Terminals
* xModmap/xkb/xserver
* stty/putty
* terminfo/termcap - tcap/tput
Good info here:
http://docstore.mik.ua/orelly/unix/upt/ch05_07.htm
http://docstore.mik.ua/orelly/unix/upt/ch05_10.htm
http://www.tldp.org/HOWTO/Text-Terminal-HOWTO-16.html
** Basic Stuff
#+BEGIN_VERSE
termcap and terminfo , by contrast, tend to control visual attributes of the terminal.
...
A program that wants to make use of the terminal capability database selects an entry according to the value of the TERM environment variable ( 6.1 ) . This variable is typically set when a user logs in. A second variable, either TERMCAP ( 5.4 ) or TERMINFO , may also be set, if it is desirable to point to a terminal description that is not in the standard location.
...
The terminal names to which TERM can legitimately be set can be determined by searching through /etc/termcap or by listing the names of files in the /usr/lib/terminfo directory hierarchy.
#+END_VERSE
It seems emacs shell typically sets itself to 
: TERM=DUMB
** terminfo
Is a text based database of info according to terminal emulators the value of which is stored in $TERM
: /lib/terminfo/x/xterm
** termcap
** tcap & tput
http://docstore.mik.ua/orelly/unix/upt/ch41_10.htm
#+BEGIN_VERSE
For each terminal in the database, there is a list of terminal capabilities ( 41.11 ) . The tput program (standard on any system with terminfo ) lets you print out the value of any individual capability. The tcap program does the same for systems using termcap . ( tcap was originally named tc . We renamed it to avoid conflicts with tc , the ditroff interpreter program for Tektronix 4015 terminals.) This makes it possible to use terminal capabilities such as those for standout mode in shell programs.
#+END_VERSE
** To read a terminfo file according to your TERM value
Call
: infocmp
and to check if your terminal is in the database call for example:
: locate vt100

From the output i can see that the arrow keys are mapped to the following
cursor up = CUU
cursor down = CUD
cursor back = CUB
cursor forward = CUF
: kcub1=\EOD, kcud1=\EOB, kcuf1=\EOC, kcuu1=\EOA,

* Readline - Bash and Z-Shell
* If your terminal starts printing gibberish 
...prob because you read a non-ascii file and an escape sequence reset something then you should be able to reset things with
: tput init

* Overriding the escape key sequence generated by a particular key for a particular TERM type
Not sure where this goes....
If TERM=xterm-color and key is Home
: set-option -g terminal-overrides "xterm-color:khome=\033[1~"

* Sources of info
** xterm and escape sequences
http://invisible-island.net/xterm/ctlseqs/ctlseqs.html
** infocmp and tic to redefine key sequences
http://stackoverflow.com/a/7975835/935470
