#+TITLE: Linux, sysadmin, whatever stuff that was pretty specific to Catalyst



* Basic routine for getting access to a server
 - get someone to add your user package to the server
   - =sudo apt-get install hal-catalyst=
 - have them add you to the sudo/admin group or whatever
   - (you prob need this)
 - get the password file from your home directory
   - =scp hal@hostname:password.txt.gpg .=
 - get your password
   - =gpg -d password.txt.gpg=
 - login
   - =ssh -A hostname=
 - change your password to something familiar
   - =passwd generated_password new_password=


* Getting Important Passwords

: ssh turing
then use:
: pview -d sydney catalyst-au.net
where sydney is a group and catalyst-au-net is a search term IIRC
This returns a format
: catalyst-au drupal site - email_address




* Drupal Deployment
See here:
https://wiki.wgtn.cat-it.co.nz/wiki/Catalyst_Australia_Pty_Ltd/Catalyst_Australia_Debian_repository

1. Finish changes.
2. Run drush dh-make-drupal
   - This will make a package to install on the server and a changelist

** Staging Deployment

First - merge changes into master branch

You then have to put this package AND the changelist in the staging environment
: scp drupal-site-cat-au-website_20121112-1_all.deb caldara:/repo-stage
: scp drupal-site-cat-au-website_20121112-1_amd64.changes caldara:/repo-stage

Now we put it on the staging server, in this case 'bordon'

: ssh bordon
*** If this is your first time logging on to this machine/you have not reset your password
This server then generates a gpg password file which we can use to get a onetime password for this session.
Copy the contents of this file to our own machine 
: cat password.txt.gpg
and grab everything e.g.:

#+BEGIN_VERSE
-----BEGIN PGP MESSAGE-----
Version: GnuPG v1.4.11 (GNU/Linux)

hQEMAzGI0LlowIRAAQf8DZfx4DeJld7cYpy/1mAbsFUnDuU6h1uvwV8bs8/jz1NX
659cOLfRD0FfrouQswOcY8FkH+TMympjFkNPXz4I/nD2YWsw6Bcr2+FpOYfqGhRB
sY6S3BXthnEsmKHRWICpuBDPt3qntIxL5XESu1Qy2OY4F2yh58vikXfA3sweShfg
sERIAKteE56AOp3AlBfi+84Ksg+T5EghTNrCS0SBNHFzY/AIriVig1ghx5vmhiSV
gnTVVN7v2PiTw3dsQDq6XMkdQACDKUE9d7MuDMwsMYWXclSdt37uMfG8oby22/om
OJov3goKal7c8TIiszRNP8/BYKiQ4qpYzU438TjZ2tLABAFRQXj7Gd0VCTGVaJkp
kM4IZv0316Btfq6XQxMSB7pfCGN2BlJrxAnyrxxYOdro59+SAcjCBLScIHUVNCyv
BMdx66F49Hc8Fu+EJzCpDwWal9a/xmUsf6lVmAfdd2ndph5S2vGdC3h0QFUr51Cg
XKiilCLWqAa2lyd2AGSJTxDCt7QHk/A8uE1gHsFM8utp/Z2tyFEVG+aRr85HfqhU
eJkgnHL8jxyat0bk3Qs7vbiOnl0pHR1NrXB3JVp9KSKBkQrxzGk=
=ydW7
-----END PGP MESSAGE-----
#+END_VERSE

and save it in a local file (any name will do e.g. password_tmp.txt)
Then:
: gpg -d password_tmp.txt
Enter secret phrase and we now have a shell password to work on bordon.
If we want to set something more permanentwe can use this to change our password for bordon via the command:
: passwd

*** Otherwise...

We then run 
: sudo apt-get update
presumably so that we can see that the package is available from the staging area.

This will automatically replace the old drupal-site-cat-au-website package with the new one.

And then:
: apt-cache search cat-au
to get the name
: sudo apt-get install drupal-site-cat-au-website 
Just to be careful update the database:
: drush updatedb
and clear the cache
: drush cc all

To check it out (become root):
: sudo -s
: cd /var/www/drupal-site-cat-au-website/
: ls -lta

There is a gpg thing which gi
?? - Not sure what happened here

** Production Deployment

Again example is in terms of Catalyst-au website

Not documented well but the host in this case is the load balanced server 'Flotsam' and 'Jetsam'
So this time we 
: scp drupal-site-cat-au-website_20121112-1_all.deb caldara:/repo-prod
: scp drupal-site-cat-au-website_20121112-1_amd64.changes caldara:/repo-prod

This puts the package on a server/repo that we can then deploy from/apt-get from on Flotsam & Jetsam

Because there are two servers we use cssh instead of ssh
: cssh flotsam&jetsam
(as sudo)
#+BEGIN_SRC bash
$ apt-get install drupal-site-cat-au-website #install the package
$ cd /var/www/drupal-site-cat-au-website # change to the doc root
$ drush en -y environment_indicator #enable the module
$ drush vset environment_indicator_enabled 2 #set the module to integrate with the environment module
$ drush cc all #clear the cache for good measure
set the permissions for access environment indicator for all roles see: http://s.catalyst-au.net/admin/user/permissions
$ drush update-db
#+END_SRC
* Below relates by example to the Catalyst Australian website: cat-au-website

** Fetching Code and Setting up
Site was "stored" in two parts - a git repository with the drupal code/directory structure: 
: $ git clone git+ssh://gitprivate.catalyst.net.nz/git/private/drupal/cat-au-website.git cat-au-website
and a =pg_dump= backup of the postgres database on the machine vedra:
: root@vedra://data/rsync/cabotage/var/backups/pg/pg-9.0-main/current/pg-catalyst_website-2012-11-06-220105.pgdump
To get this database from vedra i  logged into vedra as root:
: $ ssh vedra

** Deployment
Sites are deployed onto the machine "bordon"
into the 
: /var/www/drupal-site-cat-au-website
I copied the =sites/default/settings.php= file from here to my machine and made a couple of changes:
changed:
: $conf["archimedes_site_environment"] = "staging";
to:
: $conf["archimedes_site_environment"] = "development";
had to change the database settings:
: $db_url["default"] = "pgsql://catalyst_website:Eu4mee5hAuk1pa7v@db-host/catalyst_website";
to:
: $db_url["default"] = "pgsql://catalyst_website:Eu4mee5hAuk1pa7v@localhost/hal/cat-au-website/";

Also - so that the site cannot write to its own directory/self:
I created a directory
: /var/lib/sitedata/cat-au-drupal/files/ (could be anywhere)
and then created a symlink to it 
: sites/default/files -> /var/lib/sitedata/cat-au-drupal/files/


** Drupal Update Module Procedure - without using drush
1. Login as admin
2. Go to available updates
3. Click on Download for an outdated module (Yellow/Red) sorted by urgency (Red first)
4. Save in some tmp directory
5. cd to site directory/sites/all/modules
6. Find directory where module is - 
Could be: 
: contrib/
: patched/
: custom/
or, if older project, everything in the one directory
*BE CAREFUL IF IT IS A MODULE IN PATCHED* - you will have to apply patches again or modify/ignore patches if module no longer needs them.
7. otherwise:
: tar -xvf ~/directory_where_tgz_is_downloaded/old-module.tgz  in_parent_directory_of_old-module
will update/replace old module.
8. Create a new branch 
9. Commit changes per module (easier to use git bisect to trace the problem if an update breaks the site)
10. Push new branch to remote repo before your machine dies....
11. If all is cool - deploy via API1 method described here:
https://wiki.wgtn.cat-it.co.nz/wiki/Drupal/Getting_Started#For_API_1
Wiki is wrong -  
: $options['dh-project'] = 'cat-au-website';
is set in drushrc.local.php and not drushrc.php
However API-1 method still seems to apply to Drupal 6 sites - at least thre are no 6.x versions of debuild
only 7.x-1.0 and 7.x-2.0

I did
: sudo apt-get install apache2-mpm-itk
which removed:
: apache2-mpm-prefork
may want to reverse this situation later.....



* Basic Moodle Upgrade Recipe
1. Look up site in wiki
2. Checkout branch from private remote 
3. Identify the new version of Moodle from public repository or external source
4. Merge it in
5. Mark changes in the debian changelog
 - Make sure you update the version number date when you do this - it will be used by debian to name the resulting package
6. Add the modified debian/changelog to the git cache
7. Commit the change locally 
8. Push the change back to origin/private remote repo
9. Find out the tag format from similar entries and tag your commit with the updated version, date and sub-number
10. push this task back to the origin/private repo
11. make the package
12. Find out where staging lives and scp the package to the place where staging sources packages from
13. ssh into Staging, upload the package list and install it

* Logging into Moodle to do admin upgrades
** To get passwords and usernames
: ssh turing
: pview -d sydney catadmin
** The rest
Go to staging or where-ever.
Log in
Go to notifications
** Problems
On one site - unitingworld - i had to edit 
: /var/www/moodle/config.php 
and fix the line
: $CFG->wwwroot   = 'http://s.unitingworld.elearning.catalyst-au.net';
which had become set to 'http://' somehow



* nagios  - an internal system/daemon that checks on various servers and reports on their status/problemsx


* Logging in from home
  With the browser:

  FoxyProxy for Firefox or similar for Chrome
** Getting a site hosted on hal9000 to access from home/Airbook
   I think i had this going before...

* Some logins to various servers
** St Ignatius staging
ssh hal@cansius.riverview.nsw.edu.au
** Roseville Staging
Staging is on server rc-lms02 and production is on rc-lms01
There is stuff that has to be added to your .ssh/config file
because we are going through rc-lms01
....
Then
ssh s.rosepod.roseville.nsw.edu.au
** sopater
get login from turing
ssh catalyst@sopater
and use password from pview
use same password for sudo commands
** durbin
Durbin is dead. Durbin is now bordon
ssh bordon

** Learn MyNbcs Staging
User
catadmin1
Password
27FBL-jWmg
